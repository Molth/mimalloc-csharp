name: Build binaries

on:
  workflow_dispatch:
    inputs:
      mimalloc_tag:
        description: "tag to build (e.g., v3.0.3)"
        required: true

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [x64, arm64]
    steps:
      - uses: actions/checkout@v4
        with:
          repository: microsoft/mimalloc
          ref: ${{ inputs.mimalloc_tag }}

      - run: |
          sudo apt update
          if [ "${{ matrix.architecture }}" == "arm64" ]; then
            sudo apt install -y cmake gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          else
            sudo apt install -y cmake build-essential
          fi

      - run: |
          mkdir -p build && cd build
          if [ "${{ matrix.architecture }}" == "arm64" ]; then
            cmake .. \
              -DCMAKE_SYSTEM_NAME=Linux \
              -DCMAKE_SYSTEM_PROCESSOR=aarch64 \
              -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \
              -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ \
              -DCMAKE_BUILD_TYPE=Release
          else
            cmake .. -DCMAKE_BUILD_TYPE=Release
          fi
          make
          cp libmimalloc.so ../libmimalloc.so

      - uses: actions/upload-artifact@v4
        with:
          name: mimalloc-linux-${{ matrix.architecture }}
          path: libmimalloc.so

  build-osx:
    runs-on: macos-latest
    strategy:
      matrix:
        arch:
          - x64
          - arm64
    steps:
      - uses: actions/checkout@v4
        with:
          repository: microsoft/mimalloc
          ref: ${{ inputs.mimalloc_tag }}

      - run: |
          mkdir -p build && cd build
          if [ "${{ matrix.arch }}" = "x64" ]; then
            cmake .. -DCMAKE_OSX_ARCHITECTURES="x86_64" -DCMAKE_BUILD_TYPE=Release
          else
            cmake .. -DCMAKE_OSX_ARCHITECTURES="arm64" -DCMAKE_BUILD_TYPE=Release
          fi
          make
          cp libmimalloc.dylib ../libmimalloc.dylib

      - uses: actions/upload-artifact@v4
        with:
          name: mimalloc-osx-${{ matrix.arch }}
          path: libmimalloc.dylib

  build-win-x64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: microsoft/mimalloc
          ref: ${{ inputs.mimalloc_tag }}

      - uses: ilammy/msvc-dev-cmd@v1

      - run: |
          mkdir build && cd build
          cmake .. -G "Visual Studio 17 2022" -A x64
          cmake --build . --config Release
          copy Release\mimalloc.dll ..\mimalloc.dll
          copy ..\bin\mimalloc-redirect.dll ..\mimalloc-redirect.dll

      - uses: actions/upload-artifact@v4
        with:
          name: mimalloc-win-x64
          path: |
            mimalloc.dll
            mimalloc-redirect.dll

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: microsoft/mimalloc
          ref: ${{ inputs.mimalloc_tag }}

      - run: sudo apt update && sudo apt install -y cmake unzip

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r26d
          add-to-path: false

      - env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          ABI_MAP="armeabi-v7a:android-arm arm64-v8a:android-arm64 x86:android-x86 x86_64:android-x64"

          for PAIR in $ABI_MAP; do
            ABI=$(echo $PAIR | cut -d: -f1)
            TARGET_DIR=$(echo $PAIR | cut -d: -f2)

            mkdir -p build/$ABI
            cmake -S . -B build/$ABI \
                  -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
                  -DANDROID_ABI=$ABI \
                  -DANDROID_NATIVE_API_LEVEL=21 \
                  -DMI_ANDROID=ON \
                  -DCMAKE_BUILD_TYPE=Release
            cmake --build build/$ABI
            mkdir -p $TARGET_DIR
            cp build/$ABI/libmimalloc.so $TARGET_DIR/
          done

      - uses: actions/upload-artifact@v4
        with:
          name: mimalloc-android-arm
          path: android-arm/

      - uses: actions/upload-artifact@v4
        with:
          name: mimalloc-android-arm64
          path: android-arm64/

      - uses: actions/upload-artifact@v4
        with:
          name: mimalloc-android-x86
          path: android-x86/

      - uses: actions/upload-artifact@v4
        with:
          name: mimalloc-android-x64
          path: android-x64/

  build-ios-arm64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: microsoft/mimalloc
          ref: ${{ inputs.mimalloc_tag }}

      - run: brew install cmake --formula

      - run: |
          mkdir -p build && cd build
          cmake .. \
            -G Xcode \
            -DCMAKE_SYSTEM_NAME=iOS \
            -DCMAKE_OSX_SYSROOT=iphoneos \
            -DCMAKE_OSX_ARCHITECTURES=arm64 \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=12.0 \
            -DMI_IOS=ON \
            -DMI_BUILD_SHARED=OFF \
            -DMI_BUILD_STATIC=ON \
            -DMI_BUILD_TESTS=OFF
          cmake --build . --config Release --target mimalloc-static
          cp Release-iphoneos/libmimalloc.a ../libmimalloc.a

      - uses: actions/upload-artifact@v4
        with:
          name: mimalloc-ios-arm64
          path: libmimalloc.a

  package:
    needs:
      [build-linux, build-osx, build-win-x64, build-android, build-ios-arm64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - run: |
          mkdir -p dist/{linux-x64/native,linux-arm64/native,osx-x64/native,osx-arm64/native,win-x64/native,android-arm/native,android-arm64/native,android-x86/native,android-x64/native,ios-arm64/native}

          cp artifacts/mimalloc-linux-x64/libmimalloc.so dist/linux-x64/native/
          cp artifacts/mimalloc-linux-arm64/libmimalloc.so dist/linux-arm64/native/

          cp artifacts/mimalloc-osx-x64/libmimalloc.dylib dist/osx-x64/native/
          cp artifacts/mimalloc-osx-arm64/libmimalloc.dylib dist/osx-arm64/native/

          cp artifacts/mimalloc-win-x64/mimalloc.dll dist/win-x64/native/
          cp artifacts/mimalloc-win-x64/mimalloc-redirect.dll dist/win-x64/native/

          cp artifacts/mimalloc-android-arm/libmimalloc.so dist/android-arm/native/
          cp artifacts/mimalloc-android-arm64/libmimalloc.so dist/android-arm64/native/
          cp artifacts/mimalloc-android-x86/libmimalloc.so dist/android-x86/native/
          cp artifacts/mimalloc-android-x64/libmimalloc.so dist/android-x64/native/

          cp artifacts/mimalloc-ios-arm64/libmimalloc.a dist/ios-arm64/native/

      - uses: actions/upload-artifact@v4
        with:
          name: mimalloc-runtimes
          path: dist
